install.packages("TTR")
library(TTR)
}
#if (!require("quantstrat")) {
# install.packages("quantstrat", repos="http://R-Forge.R-project.org")
# library(quantstrat)
#}
#if (!require("IKTrading")) {
#  if (!require("devtools")) {
#    install.packages("devtools")
#  }
#library(devtools)
#install_github("IKTrading", username = "IlyaKipnis")
#library(IKTrading)
#}
library(quantmod)
start<-as.Date("2018-01-01")
end<- as.Date("2018-9-14")
symbl<-"'TTWO'"
getSymbols("TTWO", src = "yahoo", from = start, to = end)
plot(TTWO[, "TTWO.Close"], main = "TTWO")
candleChart(TTWO, up.col = "black", dn.col = "red", theme = "white")
# Let's get data for Microsoft (MSFT) and Google (GOOG) (actually, Google is
# held by a holding company called Alphabet, Inc., which is the company
# traded on the exchange and uses the ticker symbol GOOG).
getSymbols(c("MSFT", "GOOG"), src = "yahoo", from = start, to = end)
# Create an xts object (xts is loaded with quantmod) that contains closing
# prices for TTWO, MSFT, and GOOG
stocks <- as.xts(data.frame(TTWO = TTWO[, "TTWO.Close"], MSFT = MSFT[, "MSFT.Close"],
GOOG = GOOG[, "GOOG.Close"]))
head(stocks)
# Create a plot showing all series as lines; must use as.zoo to use the zoo
# method for plot, which allows for multiple series to be plotted on same
# plot
plot(as.zoo(stocks), screens = 1, lty = 1:3, xlab = "Date", ylab = "Price")
legend("right", c("TTWO", "MSFT", "GOOG"), lty = 1:3, cex = 0.5)
plot(as.zoo(stocks[, c("TTWO.Close", "MSFT.Close")]), screens = 1, lty = 1:2,
xlab = "Date", ylab = "Price")
par(new = TRUE)
plot(as.zoo(stocks[, "GOOG.Close"]), screens = 1, lty = 3, xaxt = "n", yaxt = "n",
xlab = "", ylab = "")
axis(4)
mtext("Price", side = 4, line = 3)
legend("topleft", c("TTWO (left)", "MSFT (left)", "GOOG"), lty = 1:3, cex = 0.5)
stock_return = apply(stocks, 1, function(x) {x / stocks[1,]}) %>%
t %>% as.xts
head(stock_return)
plot(as.zoo(stock_return), screens = 1, lty = 1:3, xlab = "Date", ylab = "Return")
legend("topleft", c("TTWO", "MSFT", "GOOG"), lty = 1:3, cex = 0.5)
stock_change = stocks %>% log %>% diff
head(stock_change)
plot(as.zoo(stock_change), screens = 1, lty = 1:3, xlab = "Date", ylab = "Log Difference")
legend("topleft", c("TTWO", "MSFT", "GOOG"), lty = 1:3, cex = 0.5)
candleChart(TTWO, up.col = "green", dn.col = "red", theme = "white")
addSMA(n = 20)
start <- as.Date("2010-01-01")
getSymbols(c("TTWO", "MSFT", "GOOG"), src = "yahoo", from = start, to = end)
## [1] "TTWO" "MSFT" "GOOG"
# The subset argument allows specifying the date range to view in the chart.
# This uses xts style subsetting. Here, I'm using the idiom
# 'YYYY-MM-DD/YYYY-MM-DD', where the date on the left-hand side of the / is
# the start date, and the date on the right-hand side is the end date. If
# either is left blank, either the earliest date or latest date in the
# series is used (as appropriate). This method can be used for any xts
# object, say, TTWO
candleChart(TTWO, up.col = "green", dn.col = "red", theme = "white", subset = "2016-01-04/")
addSMA(n = 20)
candleChart(TTWO, up.col = "green", dn.col = "red", theme = "white", subset = "2018-01-01/")
addSMA(n = c(20, 50, 200))
chartSeries(TTWO, up.col = "green", dn.col = "red", subset = "2017-01-04/")
TTWO_sma_20 <- SMA(
Cl(TTWO),  # The closing price of TTWO, obtained by quantmod's Cl() function
n = 20     # The number of days in the moving average window
)
TTWO_sma_50 <- SMA(
Cl(TTWO),
n = 50
)
TTWO_sma_200 <- SMA(
Cl(TTWO),
n = 200
)
#zoomChart("2018")  # Zoom into the year 2016 in the chart
addTA(TTWO_sma_20, on = 1, col = "red")  # on = 1 plots the SMA with price
addTA(TTWO_sma_50, on = 1, col = "blue")
addTA(TTWO_sma_200, on = 1, col = "green")
getSymbols("TTWO") #Goldman OHLC from yahoo
chartSeries(TTWO)
# slightly different syntax - after the fact.
# also changing the x-axis labeling
candleChart(TTWO,theme='white', type='candles')
reChart(major.ticks='months',subset='first 16 weeks')
chartSeries(TTWO,subset = "2018-01-04/") #draw the chart
addVo() #add volume
addBBands() #add Bollinger Bands
#addCCI() #add Commodity Channel Index
install.packages("Rcpp")
chartSeries(TTWO,subset = "2018-01-04/") #draw the chart
#addVo() #add volume
addBBands() #add Bollinger Bands
#addCCI() #add Commodity Channel Index
chartSeries(TTWO,  subset = "2017-01-04/")
TTWO_sma_20 <- SMA(
Cl(TTWO),  # The closing price of TTWO, obtained by quantmod's Cl() function
n = 20     # The number of days in the moving average window
)
TTWO_sma_50 <- SMA(
Cl(TTWO),
n = 50
)
TTWO_sma_200 <- SMA(
Cl(TTWO),
n = 200
)
#zoomChart("2018")  # Zoom into the year 2016 in the chart
addTA(TTWO_sma_20, on = 1, col = "red")  # on = 1 plots the SMA with price
addTA(TTWO_sma_50, on = 1, col = "blue")
addTA(TTWO_sma_200, on = 1, col = "green")
chartSeries(TTWO,  subset = "2017-01-04/")
TTWO_sma_20 <- SMA(
Cl(TTWO),  # The closing price of TTWO, obtained by quantmod's Cl() function
n = 20     # The number of days in the moving average window
)
TTWO_sma_50 <- SMA(
Cl(TTWO),
n = 50
)
TTWO_sma_200 <- SMA(
Cl(TTWO),
n = 200
)
#zoomChart("2018")  # Zoom into the year 2016 in the chart
addTA(TTWO_sma_20, on = 1, col = "#D36135")  # on = 1 plots the SMA with price
addTA(TTWO_sma_50, on = 1, col = "blue")
addTA(TTWO_sma_200, on = 1, col = "green")
chartSeries(TTWO,up.col = "#82D173", dn.col = "red",  subset = "2017-01-04/")
TTWO_sma_20 <- SMA(
Cl(TTWO),  # The closing price of TTWO, obtained by quantmod's Cl() function
n = 20     # The number of days in the moving average window
)
TTWO_sma_50 <- SMA(
Cl(TTWO),
n = 50
)
TTWO_sma_200 <- SMA(
Cl(TTWO),
n = 200
)
#zoomChart("2018")  # Zoom into the year 2016 in the chart
addTA(TTWO_sma_20, on = 1, col = "#D36135")  # on = 1 plots the SMA with price
addTA(TTWO_sma_50, on = 1, col = "blue")
addTA(TTWO_sma_200, on = 1, col = "green")
chartSeries(TTWO,up.col = "#82D173", dn.col = "red",  subset = "2018-05-04/")
TTWO_sma_20 <- SMA(
Cl(TTWO),  # The closing price of TTWO, obtained by quantmod's Cl() function
n = 20     # The number of days in the moving average window
)
TTWO_sma_50 <- SMA(
Cl(TTWO),
n = 50
)
TTWO_sma_200 <- SMA(
Cl(TTWO),
n = 200
)
#zoomChart("2018")  # Zoom into the year 2016 in the chart
addTA(TTWO_sma_20, on = 1, col = "#D36135")  # on = 1 plots the SMA with price
addTA(TTWO_sma_50, on = 1, col = "blue")
addTA(TTWO_sma_200, on = 1, col = "green")
library(quantmod)
library(magrittr)
library(TTR)
#library(devtools)
if (!require("TTR")) {
install.packages("TTR")
library(TTR)
}
#if (!require("quantstrat")) {
# install.packages("quantstrat", repos="http://R-Forge.R-project.org")
# library(quantstrat)
#}
#if (!require("IKTrading")) {
#  if (!require("devtools")) {
#    install.packages("devtools")
#  }
#library(devtools)
#install_github("IKTrading", username = "IlyaKipnis")
#library(IKTrading)
#}
library(quantmod)
start<-as.Date("2018-01-01")
end<- as.Date("2018-9-14")
symbl<-"'AMD'"
getSymbols("AMD", src = "yahoo", from = start, to = end)
plot(AMD[, "AMD.Close"], main = "AMD")
candleChart(AMD, up.col = "black", dn.col = "red", theme = "white")
# Let's get data for Microsoft (MSFT) and Google (GOOG) (actually, Google is
# held by a holding company called Alphabet, Inc., which is the company
# traded on the exchange and uses the ticker symbol GOOG).
getSymbols(c("MSFT", "GOOG"), src = "yahoo", from = start, to = end)
# Create an xts object (xts is loaded with quantmod) that contains closing
# prices for AMD, MSFT, and GOOG
stocks <- as.xts(data.frame(AMD = AMD[, "AMD.Close"], MSFT = MSFT[, "MSFT.Close"],
GOOG = GOOG[, "GOOG.Close"]))
head(stocks)
# Create a plot showing all series as lines; must use as.zoo to use the zoo
# method for plot, which allows for multiple series to be plotted on same
# plot
plot(as.zoo(stocks), screens = 1, lty = 1:3, xlab = "Date", ylab = "Price")
legend("right", c("AMD", "MSFT", "GOOG"), lty = 1:3, cex = 0.5)
plot(as.zoo(stocks[, c("AMD.Close", "MSFT.Close")]), screens = 1, lty = 1:2,
xlab = "Date", ylab = "Price")
par(new = TRUE)
plot(as.zoo(stocks[, "GOOG.Close"]), screens = 1, lty = 3, xaxt = "n", yaxt = "n",
xlab = "", ylab = "")
axis(4)
mtext("Price", side = 4, line = 3)
legend("topleft", c("AMD (left)", "MSFT (left)", "GOOG"), lty = 1:3, cex = 0.5)
stock_return = apply(stocks, 1, function(x) {x / stocks[1,]}) %>%
t %>% as.xts
head(stock_return)
plot(as.zoo(stock_return), screens = 1, lty = 1:3, xlab = "Date", ylab = "Return")
legend("topleft", c("AMD", "MSFT", "GOOG"), lty = 1:3, cex = 0.5)
stock_change = stocks %>% log %>% diff
head(stock_change)
plot(as.zoo(stock_change), screens = 1, lty = 1:3, xlab = "Date", ylab = "Log Difference")
legend("topleft", c("AMD", "MSFT", "GOOG"), lty = 1:3, cex = 0.5)
candleChart(AMD, up.col = "green", dn.col = "red", theme = "white")
addSMA(n = 20)
start <- as.Date("2010-01-01")
getSymbols(c("AMD", "MSFT", "GOOG"), src = "yahoo", from = start, to = end)
## [1] "AMD" "MSFT" "GOOG"
# The subset argument allows specifying the date range to view in the chart.
# This uses xts style subsetting. Here, I'm using the idiom
# 'YYYY-MM-DD/YYYY-MM-DD', where the date on the left-hand side of the / is
# the start date, and the date on the right-hand side is the end date. If
# either is left blank, either the earliest date or latest date in the
# series is used (as appropriate). This method can be used for any xts
# object, say, AMD
candleChart(AMD, up.col = "green", dn.col = "red", theme = "white", subset = "2016-01-04/")
addSMA(n = 20)
candleChart(AMD, up.col = "green", dn.col = "red", theme = "white", subset = "2018-01-01/")
addSMA(n = c(20, 50, 200))
chartSeries(AMD,up.col = "#82D173", dn.col = "red",  subset = "2018-05-04/")
AMD_sma_20 <- SMA(
Cl(AMD),  # The closing price of AMD, obtained by quantmod's Cl() function
n = 20     # The number of days in the moving average window
)
AMD_sma_50 <- SMA(
Cl(AMD),
n = 50
)
AMD_sma_200 <- SMA(
Cl(AMD),
n = 200
)
#zoomChart("2018")  # Zoom into the year 2016 in the chart
addTA(AMD_sma_20, on = 1, col = "#D36135")  # on = 1 plots the SMA with price
addTA(AMD_sma_50, on = 1, col = "blue")
addTA(AMD_sma_200, on = 1, col = "green")
getSymbols("AMD") #Goldman OHLC from yahoo
chartSeries(AMD)
# slightly different syntax - after the fact.
# also changing the x-axis labeling
candleChart(AMD,theme='white', type='candles')
reChart(major.ticks='months',subset='first 16 weeks')
chartSeries(AMD,subset = "2018-01-04/") #draw the chart
#addVo() #add volume
addBBands() #add Bollinger Bands
#addCCI() #add Commodity Channel Index
# slightly different syntax - after the fact.
# also changing the x-axis labeling
candleChart(AMD,theme='white', type='candles')
reChart(major.ticks='months',subset='latest 16 weeks')
# slightly different syntax - after the fact.
# also changing the x-axis labeling
candleChart(AMD,theme='white', type='candles')
reChart(major.ticks='months',subset='16 weeks')
# slightly different syntax - after the fact.
# also changing the x-axis labeling
candleChart(AMD,theme='white', type='candles')
reChart(major.ticks='months',subset='2018')
# slightly different syntax - after the fact.
# also changing the x-axis labeling
candleChart(AMD,theme='white', type='candles')
reChart(major.ticks='months',subset='first 16 weeks')
# slightly different syntax - after the fact.
# also changing the x-axis labeling
candleChart(AMD,theme='white', type='candles')
reChart(major.ticks='months')
zoomChart("last 2 months")
chartSeries(AMD,up.col = "#82D173", dn.col = "#ED254E",  subset = "2018-05-04/")
AMD_sma_20 <- SMA(
Cl(AMD),  # The closing price of AMD, obtained by quantmod's Cl() function
n = 20     # The number of days in the moving average window
)
AMD_sma_50 <- SMA(
Cl(AMD),
n = 50
)
AMD_sma_200 <- SMA(
Cl(AMD),
n = 200
)
#zoomChart("2018")  # Zoom into the year 2016 in the chart
addTA(AMD_sma_20, on = 1, col = "#D36135")  # on = 1 plots the SMA with price
addTA(AMD_sma_50, on = 1, col = "blue")
addTA(AMD_sma_200, on = 1, col = "green")
chartSeries(AMD,up.col = "#82D173", dn.col = "#ED254E", subset = "2018-05-04/")
AMD_sma_20 <- SMA(
Cl(AMD),  # The closing price of AMD, obtained by quantmod's Cl() function
n = 20     # The number of days in the moving average window
)
AMD_sma_50 <- SMA(
Cl(AMD),
n = 50
)
AMD_sma_200 <- SMA(
Cl(AMD),
n = 200
)
#zoomChart("2018")  # Zoom into the year 2016 in the chart
addTA(AMD_sma_20, on = 1, col = "#D36135")  # on = 1 plots the SMA with price
addTA(AMD_sma_50, on = 1, col = "#011936")
addTA(AMD_sma_200, on = 1, col = "#F9DC5C")
chartSeries(AMD,up.col = "#82D173", dn.col = "#ED254E", subset = "2018-05-04/")
AMD_sma_20 <- SMA(
Cl(AMD),  # The closing price of AMD, obtained by quantmod's Cl() function
n = 20     # The number of days in the moving average window
)
AMD_sma_50 <- SMA(
Cl(AMD),
n = 50
)
AMD_sma_200 <- SMA(
Cl(AMD),
n = 200
)
#zoomChart("2018")  # Zoom into the year 2016 in the chart
addTA(AMD_sma_20, on = 1, col = "#D36135")  # on = 1 plots the SMA with price
addTA(AMD_sma_50, on = 1, col = "#465362")
addTA(AMD_sma_200, on = 1, col = "#F9DC5C")
chartSeries(AMD,up.col = "#82D173", dn.col = "#ED254E", subset = "2018-06-04/")
AMD_sma_20 <- SMA(
Cl(AMD),  # The closing price of AMD, obtained by quantmod's Cl() function
n = 20     # The number of days in the moving average window
)
AMD_sma_50 <- SMA(
Cl(AMD),
n = 50
)
AMD_sma_200 <- SMA(
Cl(AMD),
n = 200
)
#zoomChart("2018")  # Zoom into the year 2016 in the chart
addTA(AMD_sma_20, on = 1, col = "#D36135")  # on = 1 plots the SMA with price
addTA(AMD_sma_50, on = 1, col = "#465362")
addTA(AMD_sma_200, on = 1, col = "#F9DC5C")
chartSeries(AMD,up.col = "#82D173", dn.col = "#ED254E", subset = "2018-08-04/")
AMD_sma_20 <- SMA(
Cl(AMD),  # The closing price of AMD, obtained by quantmod's Cl() function
n = 20     # The number of days in the moving average window
)
AMD_sma_50 <- SMA(
Cl(AMD),
n = 50
)
AMD_sma_200 <- SMA(
Cl(AMD),
n = 200
)
#zoomChart("2018")  # Zoom into the year 2016 in the chart
addTA(AMD_sma_20, on = 1, col = "#D36135")  # on = 1 plots the SMA with price
addTA(AMD_sma_50, on = 1, col = "#465362")
addTA(AMD_sma_200, on = 1, col = "#F9DC5C")
chartSeries(AMD,up.col = "#82D173", dn.col = "#ED254E", subset = "2018-05-04/")
AMD_sma_20 <- SMA(
Cl(AMD),  # The closing price of AMD, obtained by quantmod's Cl() function
n = 20     # The number of days in the moving average window
)
AMD_sma_50 <- SMA(
Cl(AMD),
n = 50
)
AMD_sma_200 <- SMA(
Cl(AMD),
n = 200
)
#zoomChart("2018")  # Zoom into the year 2016 in the chart
addTA(AMD_sma_20, on = 1, col = "#D36135")  # on = 1 plots the SMA with price
addTA(AMD_sma_50, on = 1, col = "#465362")
addTA(AMD_sma_200, on = 1, col = "#F9DC5C")
library(quantmod)
library(magrittr)
library(TTR)
#library(devtools)
if (!require("TTR")) {
install.packages("TTR")
library(TTR)
}
#if (!require("quantstrat")) {
# install.packages("quantstrat", repos="http://R-Forge.R-project.org")
# library(quantstrat)
#}
#if (!require("IKTrading")) {
#  if (!require("devtools")) {
#    install.packages("devtools")
#  }
#library(devtools)
#install_github("IKTrading", username = "IlyaKipnis")
#library(IKTrading)
#}
library(quantmod)
start<-as.Date("2018-01-01")
end<- as.Date("2018-9-14")
symbl<-"'ATVI'"
getSymbols("ATVI", src = "yahoo", from = start, to = end)
plot(ATVI[, "ATVI.Close"], main = "ATVI")
candleChart(ATVI, up.col = "black", dn.col = "red", theme = "white")
# Let's get data for Microsoft (MSFT) and Google (GOOG) (actually, Google is
# held by a holding company called Alphabet, Inc., which is the company
# traded on the exchange and uses the ticker symbol GOOG).
getSymbols(c("MSFT", "GOOG"), src = "yahoo", from = start, to = end)
# Create an xts object (xts is loaded with quantmod) that contains closing
# prices for ATVI, MSFT, and GOOG
stocks <- as.xts(data.frame(ATVI = ATVI[, "ATVI.Close"], MSFT = MSFT[, "MSFT.Close"],
GOOG = GOOG[, "GOOG.Close"]))
head(stocks)
# Create a plot showing all series as lines; must use as.zoo to use the zoo
# method for plot, which allows for multiple series to be plotted on same
# plot
plot(as.zoo(stocks), screens = 1, lty = 1:3, xlab = "Date", ylab = "Price")
legend("right", c("ATVI", "MSFT", "GOOG"), lty = 1:3, cex = 0.5)
plot(as.zoo(stocks[, c("ATVI.Close", "MSFT.Close")]), screens = 1, lty = 1:2,
xlab = "Date", ylab = "Price")
par(new = TRUE)
plot(as.zoo(stocks[, "GOOG.Close"]), screens = 1, lty = 3, xaxt = "n", yaxt = "n",
xlab = "", ylab = "")
axis(4)
mtext("Price", side = 4, line = 3)
legend("topleft", c("ATVI (left)", "MSFT (left)", "GOOG"), lty = 1:3, cex = 0.5)
stock_return = apply(stocks, 1, function(x) {x / stocks[1,]}) %>%
t %>% as.xts
head(stock_return)
plot(as.zoo(stock_return), screens = 1, lty = 1:3, xlab = "Date", ylab = "Return")
legend("topleft", c("ATVI", "MSFT", "GOOG"), lty = 1:3, cex = 0.5)
stock_change = stocks %>% log %>% diff
head(stock_change)
plot(as.zoo(stock_change), screens = 1, lty = 1:3, xlab = "Date", ylab = "Log Difference")
legend("topleft", c("ATVI", "MSFT", "GOOG"), lty = 1:3, cex = 0.5)
candleChart(ATVI, up.col = "green", dn.col = "red", theme = "white")
addSMA(n = 20)
start <- as.Date("2010-01-01")
getSymbols(c("ATVI", "MSFT", "GOOG"), src = "yahoo", from = start, to = end)
## [1] "ATVI" "MSFT" "GOOG"
# The subset argument allows specifying the date range to view in the chart.
# This uses xts style subsetting. Here, I'm using the idiom
# 'YYYY-MM-DD/YYYY-MM-DD', where the date on the left-hand side of the / is
# the start date, and the date on the right-hand side is the end date. If
# either is left blank, either the earliest date or latest date in the
# series is used (as appropriate). This method can be used for any xts
# object, say, ATVI
candleChart(ATVI, up.col = "green", dn.col = "red", theme = "white", subset = "2016-01-04/")
addSMA(n = 20)
candleChart(ATVI, up.col = "green", dn.col = "red", theme = "white", subset = "2018-01-01/")
addSMA(n = c(20, 50, 200))
chartSeries(ATVI,up.col = "#82D173", dn.col = "#ED254E", subset = "2018-05-04/")
ATVI_sma_20 <- SMA(
Cl(ATVI),  # The closing price of ATVI, obtained by quantmod's Cl() function
n = 20     # The number of days in the moving average window
)
ATVI_sma_50 <- SMA(
Cl(ATVI),
n = 50
)
ATVI_sma_200 <- SMA(
Cl(ATVI),
n = 200
)
#zoomChart("2018")  # Zoom into the year 2016 in the chart
addTA(ATVI_sma_20, on = 1, col = "#D36135")  # on = 1 plots the SMA with price
addTA(ATVI_sma_50, on = 1, col = "#465362")
addTA(ATVI_sma_200, on = 1, col = "#F9DC5C")
getSymbols("ATVI") #Goldman OHLC from yahoo
chartSeries(ATVI)
# slightly different syntax - after the fact.
# also changing the x-axis labeling
candleChart(ATVI,theme='white', type='candles')
reChart(major.ticks='months')
zoomChart("last 2 months")
chartSeries(ATVI,subset = "2018-01-04/") #draw the chart
#addVo() #add volume
addBBands() #add Bollinger Bands
#addCCI() #add Commodity Channel Index
chartSeries(ATVI,up.col = "#82D173", dn.col = "#ED254E", subset = "2018-01-04/")
ATVI_sma_20 <- SMA(
Cl(ATVI),  # The closing price of ATVI, obtained by quantmod's Cl() function
n = 20     # The number of days in the moving average window
)
ATVI_sma_50 <- SMA(
Cl(ATVI),
n = 50
)
ATVI_sma_200 <- SMA(
Cl(ATVI),
n = 200
)
#zoomChart("2018")  # Zoom into the year 2016 in the chart
addTA(ATVI_sma_20, on = 1, col = "#D36135")  # on = 1 plots the SMA with price
addTA(ATVI_sma_50, on = 1, col = "#465362")
addTA(ATVI_sma_200, on = 1, col = "#F9DC5C")
